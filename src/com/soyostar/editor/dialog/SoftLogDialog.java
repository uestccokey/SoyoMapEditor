/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SoftLogDialog.java
 *
 * Created on 2011-3-13, 21:07:09
 */
package com.soyostar.editor.dialog;

import com.soyostar.editor.info.SystemInformation;
import com.soyostar.editor.util.FileFilterCreater;
import com.soyostar.editor.util.Log;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;

/**
 *
 * @author Administrator
 */
public class SoftLogDialog extends javax.swing.JDialog {

    /** Creates new form SoftLogDialog
     * @param parent
     * @param modal  
     */
    public SoftLogDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialize();
    }

    private void initialize() {
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        try{
            softRunLogTextArea = new com.soyostar.editor.map.ui.widget.JConsoleTextArea();
            exportLogButton = new javax.swing.JButton();
            closeButton = new javax.swing.JButton();
            clockPane = new javax.swing.JPanel();
            pb = new javax.swing.JProgressBar();
            pb2 = new javax.swing.JProgressBar();
            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(SoftLogDialog.class);
            setTitle(resourceMap.getString("title")); // NOI18N
            setResizable(false);

            jScrollPane1.setName("jScrollPane1"); // NOI18N

        }catch(Exception e){
            Log.getLogger(this.getClass()).error("softRunLogTextArea初始化异常", e);
        }
        softRunLogTextArea.setColumns(20);
        softRunLogTextArea.setRows(5);
        softRunLogTextArea.setName("softRunLogTextArea"); // NOI18N
        jScrollPane1.setViewportView(softRunLogTextArea);

        exportLogButton.setText("导出日志"); // NOI18N
        exportLogButton.setName("exportLogButton"); // NOI18N
        exportLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportLogButtonActionPerformed(evt);
            }
        });

        closeButton.setText("关闭"); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        com.soyostar.editor.map.ui.widget.JAnalogClock clock = new com.soyostar.editor.map.ui.widget.JAnalogClock();
        clock.setToolTipText("当前日期：" + SystemInformation.Date.Year + "-" + SystemInformation.Date.Month + "-" + SystemInformation.Date.Day);
        clockPane.add(clock);
        clockPane.setName("clockPane"); // NOI18N

        javax.swing.GroupLayout clockPaneLayout = new javax.swing.GroupLayout(clockPane);
        clockPane.setLayout(clockPaneLayout);
        clockPaneLayout.setHorizontalGroup(
            clockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        clockPaneLayout.setVerticalGroup(
            clockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        // 设置定时器，用来控制进度条的处理
        javax.swing.Timer time = new javax.swing.Timer(1000, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                int total = (int) Runtime.getRuntime().totalMemory();
                int used = (int) (total - Runtime.getRuntime().freeMemory());
                pb.setMaximum(total);
                pb.setValue(used);
                pb.setString(used / 1024 + " / " + total / 1024);

            }
        });
        time.start();

        pb.setStringPainted(true);
        pb.setToolTipText("点击清理内存");
        pb.setName("pb"); // NOI18N
        pb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pbMouseClicked(evt);
            }
        });

        javax.swing.Timer time2 = new javax.swing.Timer(1000, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                int max = (int) Runtime.getRuntime().maxMemory();
                int total = (int) Runtime.getRuntime().totalMemory();
                pb2.setMaximum(max);
                pb2.setValue(total);
                pb2.setString(total / 1024 + " / " + max / 1024);

            }
        });
        time2.start();
        pb2.setStringPainted(true);
        pb2.setToolTipText("已申请内存和最大可用内存的比值");
        pb2.setName("pb2"); // NOI18N

        jLabel1.setText("内存占用(KB)"); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("存耗比(KB)"); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(clockPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pb, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pb2, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(exportLogButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clockPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exportLogButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pbMouseClicked
        // TODO add your handling code here:
        System.gc();
    }//GEN-LAST:event_pbMouseClicked

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void exportLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportLogButtonActionPerformed
        // TODO add your handling code here:
        saveLog(softRunLogTextArea.getText());
    }//GEN-LAST:event_exportLogButtonActionPerformed
    private boolean saveLog(String str) {
        JFileChooser jf = new JFileChooser();
        jf.setCurrentDirectory(new File("log"));
        jf.setAcceptAllFileFilterUsed(false);
        FileFilterCreater logFilter = new FileFilterCreater(".log", "log 文件 (*.log)");
        jf.addChoosableFileFilter(logFilter);
        int fresult;
        fresult = jf.showSaveDialog(this);
        if (fresult == JFileChooser.APPROVE_OPTION) { // 用户点击了“确定”按钮
            File file = jf.getSelectedFile(); //获得文件名
            // 获得被选中的过滤器
            FileFilterCreater filter = (FileFilterCreater) jf.getFileFilter();
            // 获得过滤器的扩展名
            String ends = filter.getEnds();
            File newFile = null;
            if (file.getAbsolutePath().toUpperCase().endsWith(ends.toUpperCase())) {
                // 如果文件是以选定扩展名结束的，则使用原名
                newFile = file;
            } else {
                // 否则加上选定的扩展名
                newFile = new File(file.getAbsolutePath() + ends);
            }
            try {
                FileWriter fw = new FileWriter(newFile);
                PrintWriter pw = new PrintWriter(fw);
                String[] s = str.split("\n");
                for (int i = 0, n = s.length; i < n; i++) {
                    pw.println(s[i]);
                }
                pw.flush();
                pw.close();
                fw.close();
//                System.out.println("导出日志成功！");
                return true;
            } catch (Exception e) {
//                System.out.println("导出日志失败！");
                Log.getLogger(this.getClass()).error("保存日志文件初始化异常！", e);
            }
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SoftLogDialog dialog = new SoftLogDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel clockPane;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton exportLogButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar pb;
    private javax.swing.JProgressBar pb2;
    private javax.swing.JTextArea softRunLogTextArea;
    // End of variables declaration//GEN-END:variables
}
