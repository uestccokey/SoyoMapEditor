/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditMapDialog.java
 *
 * Created on 2011-3-27, 15:05:35
 */
package com.soyostar.editor.map.dialog;

import com.soyostar.editor.map.main.AppData;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class EditMapDialog extends javax.swing.JDialog {

    /** Creates new form EditMapDialog
     * @param parent
     * @param modal  
     */
    public EditMapDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialize();
    }

    private void initialize() {
        setLocationRelativeTo(null);
        init();
    }
    private AppData data = AppData.getInstance();

    private void init() {
        mapNameTextField.setText(data.getCurrentMap().getName());
        mapWidthTextField.setText("" + data.getCurrentMap().getWidth());
        mapHeightTextField.setText("" + data.getCurrentMap().getHeight());
        tileWidthTextField.setText("" + data.getCurrentMap().getTileWidth());
        tileHeightTextField.setText("" + data.getCurrentMap().getTileHeight());
        mapSizeLabel.setText("" + data.getCurrentMap().getWidth() * data.getCurrentMap().getTileWidth() + "x" + data.getCurrentMap().getHeight() * data.getCurrentMap().getTileHeight());
        for (int i = 0; i < mapPropertyTable.getRowCount(); i++) {
            ((DefaultTableModel) mapPropertyTable.getModel()).removeRow(0);
        }
        Iterator iter = data.getCurrentMap().getProperties().entrySet().iterator();
        while (iter.hasNext()) {
            Map.Entry entry = (Map.Entry) iter.next();
            Object key = entry.getKey();
            Object val = entry.getValue();
            ((DefaultTableModel) mapPropertyTable.getModel()).addRow(new String[]{key.toString(), val.toString()});
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancleButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mapNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mapWidthTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mapHeightTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tileWidthTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tileHeightTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        mapSizeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mapPropertyTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        addMapPropertyButton = new javax.swing.JButton();
        removeMapPropertyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(EditMapDialog.class);
        setTitle(resourceMap.getString("title")); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        okButton.setText("确定");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancleButton.setText("取消");
        cancleButton.setName("cancleButton"); // NOI18N
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("名称");
        jLabel1.setName("jLabel1"); // NOI18N

        mapNameTextField.setName("mapNameTextField"); // NOI18N

        jLabel2.setText("Map宽");
        jLabel2.setName("jLabel2"); // NOI18N

        mapWidthTextField.setName("mapWidthTextField"); // NOI18N

        jLabel3.setText("Map高");
        jLabel3.setName("jLabel3"); // NOI18N

        mapHeightTextField.setName("mapHeightTextField"); // NOI18N

        jLabel5.setText("Tile宽");
        jLabel5.setName("jLabel5"); // NOI18N

        tileWidthTextField.setEnabled(false);
        tileWidthTextField.setName("tileWidthTextField"); // NOI18N

        jLabel6.setText("Tile高");
        jLabel6.setName("jLabel6"); // NOI18N

        tileHeightTextField.setEnabled(false);
        tileHeightTextField.setName("tileHeightTextField"); // NOI18N

        jLabel7.setText("地图像素大小：");
        jLabel7.setName("jLabel7"); // NOI18N

        mapSizeLabel.setText("无");
        mapSizeLabel.setName("mapSizeLabel"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mapPropertyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "属性", "值"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mapPropertyTable.setName("mapPropertyTable"); // NOI18N
        mapPropertyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(mapPropertyTable);

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.JToolBar.VERTICAL);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        addMapPropertyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/resources/gnome-new.png"))); // NOI18N
        addMapPropertyButton.setFocusable(false);
        addMapPropertyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addMapPropertyButton.setName("addMapPropertyButton"); // NOI18N
        addMapPropertyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addMapPropertyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMapPropertyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addMapPropertyButton);

        removeMapPropertyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/resources/gnome-delete.png"))); // NOI18N
        removeMapPropertyButton.setFocusable(false);
        removeMapPropertyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeMapPropertyButton.setName("removeMapPropertyButton"); // NOI18N
        removeMapPropertyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeMapPropertyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMapPropertyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeMapPropertyButton);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(okButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancleButton))
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(103, 103, 103)
                            .addComponent(mapSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(33, 33, 33)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tileWidthTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mapWidthTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6))
                                    .addGap(23, 23, 23)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tileHeightTextField)
                                        .addComponent(mapHeightTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                                .addComponent(mapNameTextField)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mapNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(mapWidthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(mapHeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tileWidthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tileHeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(mapSizeLabel))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton)
                    .addComponent(cancleButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        if (mapNameTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "地图名不能为空！");
            return;
        }
        String mapName = mapNameTextField.getText();
        if (mapWidthTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "地图宽度不能为空！");
            return;
        }
        int mapW = Integer.parseInt(mapWidthTextField.getText());

        if (mapHeightTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "地图高度不能为空！");
            return;
        }
        int mapH = Integer.parseInt(mapHeightTextField.getText());

        data.getCurrentMap().removeAllProperty();
        for (int i = 0; i < mapPropertyTable.getRowCount(); i++) {
            data.getCurrentMap().addProperty(mapPropertyTable.getModel().getValueAt(i, 0).toString(), mapPropertyTable.getModel().getValueAt(i, 1).toString());
        }
        data.getCurrentMap().setName(mapName);
        data.getCurrentMap().resize(mapW, mapH, 0, 0);
        data.getMainFrame().mapScrollPane.setViewportView(data.getCurrentMap().getMapRender());
        data.getCurrentMap().getMapRender().repaintMiniMapImg();
        data.miniMapRepaint();
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancleButtonActionPerformed

    private void addMapPropertyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMapPropertyButtonActionPerformed
        // TODO add your handling code here:
        ((DefaultTableModel) mapPropertyTable.getModel()).addRow(new String[]{"", ""});
    }//GEN-LAST:event_addMapPropertyButtonActionPerformed

    private void removeMapPropertyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMapPropertyButtonActionPerformed
        // TODO add your handling code here:
        if (mapPropertyTable.getSelectedRow() != -1) {
            ((DefaultTableModel) mapPropertyTable.getModel()).removeRow(mapPropertyTable.getSelectedRow());
        }
    }//GEN-LAST:event_removeMapPropertyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                EditMapDialog dialog = new EditMapDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMapPropertyButton;
    private javax.swing.JButton cancleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField mapHeightTextField;
    private javax.swing.JTextField mapNameTextField;
    private javax.swing.JTable mapPropertyTable;
    private javax.swing.JLabel mapSizeLabel;
    private javax.swing.JTextField mapWidthTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JButton removeMapPropertyButton;
    private javax.swing.JTextField tileHeightTextField;
    private javax.swing.JTextField tileWidthTextField;
    // End of variables declaration//GEN-END:variables
}
